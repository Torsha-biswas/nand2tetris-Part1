// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
	DMux8Way(in=load, sel=address[3..5], a=dA,b=dB,c=dC,d=dD,e=dE,f=dF,g=dG,h=dH);
    
    RAM8(in=in, load=dA, address=address[0..2], out=regOut0);
    RAM8(in=in, load=dB, address=address[0..2], out=regOut1);
    RAM8(in=in, load=dC, address=address[0..2], out=regOut2);
    RAM8(in=in, load=dD, address=address[0..2], out=regOut3);
    RAM8(in=in, load=dE, address=address[0..2], out=regOut4);
    RAM8(in=in, load=dF, address=address[0..2], out=regOut5);
    RAM8(in=in, load=dG, address=address[0..2], out=regOut6);
    RAM8(in=in, load=dH, address=address[0..2], out=regOut7);

    Mux8Way16(a=regOut0, b=regOut1, c=regOut2, d=regOut3, e=regOut4, f=regOut5, g=regOut6, h=regOut7, sel=address[3..5], out=out);
}

