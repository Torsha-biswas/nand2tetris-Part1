// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */

CHIP RAM512 {

    IN in[16],       // input data (16 bits)
       load,         // load signal
       address[9],   // address (9 bits)
       inc;          // increment signal

    OUT out[16];     // output data (16 bits)

    PARTS:
    // Use DMux8Way to generate chip selects based on the address
    DMux8Way(in=load, sel=address[6..8], a=sel0, b=sel1, c=sel2, d=sel3, e=sel4, f=sel5, g=sel6, h=sel7);

    // Use RAM64 to store data at the selected address
    RAM64(in=in, load=sel0, address=address[0..5], out=out0);
    RAM64(in=in, load=sel1, address=address[0..5], out=out1);
    RAM64(in=in, load=sel2, address=address[0..5], out=out2);
    RAM64(in=in, load=sel3, address=address[0..5], out=out3);
    RAM64(in=in, load=sel4, address=address[0..5], out=out4);
    RAM64(in=in, load=sel5, address=address[0..5], out=out5);
    RAM64(in=in, load=sel6, address=address[0..5], out=out6);
    RAM64(in=in, load=sel7, address=address[0..5], out=out7);

    // Use Mux8Way16 to select the output based on the address
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[6..8], out=out);
}

